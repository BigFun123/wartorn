import { Quaternion } from "@babylonjs/core";

export function EulerDegreesToQuaternion(Euler) {
    return Quaternion.FromEulerAngles(ToRadians(Euler[0]), ToRadians(Euler[1]), ToRadians(Euler[2]));
}

export function ToRadians(degrees) {
    return degrees * (Math.PI / 180);
}

   // 100 random numbers between 0 and 1
export const _randomNumbers = [0.8022, 0.6897, 0.2974, 0.3434, 0.0992, 0.7979, 0.9651, 0.0239, 0.2584, 0.0788,
    0.6740, 0.5772, 0.2033, 0.6163, 0.1721, 0.1762, 0.7527, 0.9719, 0.3067, 0.2575,
    0.0066, 0.4629, 0.5919, 0.4043, 0.6016, 0.8029, 0.9958, 0.3385, 0.7231, 0.1627,
    0.3844, 0.1228, 0.2467, 0.6000, 0.8845, 0.7599, 0.2003, 0.7233, 0.6153, 0.5791,
    0.2496, 0.1144, 0.0126, 0.0202, 0.2703, 0.3148, 0.7004, 0.9673, 0.9456, 0.6241,
    0.0104, 0.2077, 0.2682, 0.1426, 0.9071, 0.3720, 0.0618, 0.4565, 0.4126, 0.8812,
    0.6417, 0.8242, 0.0735, 0.1579, 0.4556, 0.2415, 0.0684, 0.8034, 0.2779, 0.5424,
    0.1984, 0.4987, 0.8381, 0.9646, 0.7329, 0.3285, 0.3088, 0.4617, 0.9586, 0.2287,
    0.8213, 0.5846, 0.3225, 0.5908, 0.6588, 0.0035, 0.8798, 0.4994, 0.4006, 0.8359,
    0.7782, 0.8231, 0.8855, 0.2017, 0.5583, 0.8628, 0.8483, 0.9744, 0.7883, 0.0336];

    export function xyToTile (x, y, tilesize) {
        return [Math.floor((x-tilesize/2) / tilesize), Math.floor((-y-tilesize/2) / tilesize)];
    }
